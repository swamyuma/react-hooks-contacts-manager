{"version":3,"sources":["Store.js","App.js","reducers.js","Header.js","ContactList.js","Components/Layout/TextInputGroup.js","AddContact.js","index.js"],"names":["ContactsContext","React","createContext","contacts","id","uuid","v4","name","email","phone","hidden","Header","_ref","branding","react_default","a","createElement","className","href","defaultProps","App","reducer","state","action","type","map","contact","payload","Object","objectSpread","console","log","_action$payload","newContact","concat","toConsumableArray","filter","ContactList","index","_useContext","useContext","Store","dispatch","onClick","style","cursor","color","float","TextInputGroup","label","placeholder","value","onChange","error","htmlFor","autoComplete","classnames","is-invalid","AddContact","_useState","useState","errors","_useState2","slicedToArray","formData","setFormData","handleContactAdd","inputField","onSubmit","event","preventDefault","keyCode","field","e","defineProperty","target","updateFormData","render","globalStore","_useReducer","useReducer","_useReducer2","Provider","Header_Header","document","getElementById"],"mappings":"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","file":"static/js/main.aef1668e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport uuid from \"uuid\";\r\n\r\nconst ContactsContext = React.createContext({\r\n  contacts: [\r\n    {\r\n      id: uuid.v4(),\r\n      name: \"Taversy Media\",\r\n      email: \"traversy@gmail.com\",\r\n      phone: \"111-111-1111\",\r\n      hidden: false\r\n    },\r\n    {\r\n      id: uuid.v4(),\r\n      name: \"Designer Course\",\r\n      email: \"designer@gmail.com\",\r\n      phone: \"222-222-2222\",\r\n      hidden: false\r\n    },\r\n    {\r\n      id: uuid.v4(),\r\n      name: \"Code Realm\",\r\n      email: \"realm@gmail.com\",\r\n      phone: \"333-333-3333\",\r\n      hidden: false\r\n    },\r\n    {\r\n      id: uuid.v4(),\r\n      name: \"Acade Mind\",\r\n      email: \"mind@gmail.com\",\r\n      phone: \"444-444-4444\",\r\n      hidden: false\r\n    }\r\n  ]\r\n});\r\n\r\nexport default ContactsContext;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactsContext from \"./Store\";\r\n\r\nfunction Header({ branding }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark narvbar-danger bg-danger py-0 mb-3\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <a href=\"/\" className=\"nav-link\">\r\n                Home\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction Contact({ contact, index, deleteContact }) {\r\n  const [hidden, setHidden] = useState(false);\r\n\r\n  const { name, email, phone } = contact;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card card-body mb-3\">\r\n        <h4>\r\n          {name}{\" \"}\r\n          <i\r\n            onClick={() => setHidden(!hidden)}\r\n            className=\"fas fa-sort-down\"\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n          <i\r\n            className=\"fas fa-times\"\r\n            style={{ cursor: \"pointer\", color: \"red\", float: \"right\" }}\r\n            onClick={() => deleteContact(index)}\r\n          />\r\n        </h4>\r\n        {hidden ? (\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">{email}</li>\r\n            <li className=\"list-group-item\">{phone}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ContactForm({ addContact }) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    console.log(value);\r\n\r\n    if (!value) return;\r\n    addContact(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-body mb-3\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Add Contact\"\r\n          value={value}\r\n          onChange={e => setValue(e.target.value)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useContext(ContactsContext);\r\n\r\n  console.log(contacts);\r\n  const addContact = name => {\r\n    const newContact = [...contacts, { name }];\r\n    setContacts(newContact);\r\n  };\r\n\r\n  const deleteContact = index => {\r\n    const newContacts = [...contacts];\r\n    newContacts.splice(index, 1);\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header branding=\"Contact Manager\" />\r\n      <div className=\"container\">\r\n        <div className=\"contact-list\">\r\n          {contacts.map((contact, index) => (\r\n            <Contact\r\n              key={index}\r\n              index={index}\r\n              contact={contact}\r\n              deleteContact={deleteContact}\r\n            />\r\n          ))}\r\n          <ContactForm addContact={addContact} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default App;\r\n","import uuid from \"uuid\";\r\n\r\nexport default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"TOGGLE_VIEW\": {\r\n      return {\r\n        contacts: state.contacts.map(contact => {\r\n          if (contact.id !== action.payload) {\r\n            return contact;\r\n          }\r\n          return {\r\n            ...contact,\r\n            hidden: !contact.hidden\r\n          };\r\n        })\r\n      };\r\n    }\r\n    case \"ADD_CONTACT\": {\r\n      console.log(action.payload);\r\n      const { name, email, phone } = action.payload;\r\n      const newContact = {\r\n        id: uuid.v4(),\r\n        name: name,\r\n        email: email,\r\n        phone: phone\r\n      };\r\n      console.log(newContact);\r\n      return {\r\n        contacts: [...state.contacts, newContact]\r\n      };\r\n    }\r\n    case \"REMOVE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Header() {\r\n  const branding = \"Contacts Manager\";\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark narvbar-danger bg-danger py-0 mb-3\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <a href=\"/\" className=\"nav-link\">\r\n                Home\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport Store from \"./Store\";\r\n\r\nexport default function ContactList({ contact, index }) {\r\n  const { state, dispatch } = useContext(Store);\r\n\r\n  //const [state, dispatch] = useReducer(contactsReducer, contacts);\r\n\r\n  return (\r\n    <div className=\"container card card-body mb-3 ml-6 mr-6\">\r\n      <div className=\"card-header\">Contacts</div>\r\n      {state.contacts.map(contact => {\r\n        const { id, name, email, phone, hidden } = contact;\r\n        return (\r\n          <div className=\"card card-body mb-3 ml-6 mr-6\">\r\n            <h4>\r\n              {name}{\" \"}\r\n              <i\r\n                onClick={() => dispatch({ type: \"TOGGLE_VIEW\", payload: id })}\r\n                className=\"fas fa-sort-down\"\r\n                style={{ cursor: \"pointer\" }}\r\n              />\r\n              <i\r\n                className=\"fas fa-times\"\r\n                style={{ cursor: \"pointer\", color: \"red\", float: \"right\" }}\r\n                onClick={() =>\r\n                  dispatch({ type: \"REMOVE_CONTACT\", payload: id })\r\n                }\r\n              />\r\n            </h4>\r\n            {hidden ? (\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">{email}</li>\r\n                <li className=\"list-group-item\">{phone}</li>\r\n              </ul>\r\n            ) : null}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default function TextInputGroup({\r\n  name,\r\n  type,\r\n  label,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        autoComplete=\"off\"\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport Store from \"./Store\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport TextInputGroup from \"./Components/Layout/TextInputGroup\";\r\n\r\n//import validate from \"./Components/Validation/ContactFormValidationRules\";\r\n\r\nexport default function AddContact() {\r\n  const { dispatch } = useContext(Store);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  });\r\n  /* function handleContactChange(e) {\r\n    setContact({ [e.target.name]: e.target.value });\r\n  } */\r\n\r\n  function handleContactAdd() {\r\n    const { name, email, phone, errors } = formData;\r\n\r\n    if (name === \"\") {\r\n      setFormData({\r\n        errors: { name: \"Enter a valid name\", email: \"\", phone: \"\" }\r\n      });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      setFormData({\r\n        errors: { name: \"\", email: \"Enter a valid email\", phone: \"\" }\r\n      });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      setFormData({\r\n        errors: { name: \"\", email: \"\", phone: \"Enter a valid phone\" }\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: \"ADD_CONTACT\", payload: formData });\r\n    setFormData({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: { name: \"\", email: \"\", phone: \"\" }\r\n    });\r\n  }\r\n\r\n  function handleSubmitForm(event) {\r\n    event.preventDefault();\r\n    if (event.keyCode === 13) handleContactAdd();\r\n    // console.log(contact);\r\n  }\r\n\r\n  const updateFormData = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const { name, email, phone, errors } = formData;\r\n\r\n  const inputField = [\r\n    [\"Name\", \"name\", \"text\", \"Enter name...\", name, errors.name],\r\n    [\"Email\", \"email\", \"email\", \"Enter email...\", email, errors.email],\r\n    [\"Phone\", \"phone\", \"text\", \"Enter phone...\", phone, errors.phone]\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container card card-body mb-3 ml-6 mr-6\">\r\n      <div className=\"card-header\">Add Contact</div>\r\n      <form onSubmit={handleSubmitForm}>\r\n        {inputField.map(field => {\r\n          return (\r\n            <TextInputGroup\r\n              label={field[0]}\r\n              name={field[1]}\r\n              type={field[2]}\r\n              placeholder={field[3]}\r\n              value={field[4]}\r\n              onChange={e => updateFormData(e)}\r\n              error={field[5]}\r\n            />\r\n          );\r\n        })}\r\n\r\n        <div className=\"input-group-append\">\r\n          <button\r\n            className=\"btn btn-block btn-primary\"\r\n            onClick={handleContactAdd}\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport Store from \"./Store\";\r\nimport reducer from \"./reducers\";\r\n//import { usePersistedContext, usePersistedReducer } from \"./usePersist\";\r\n\r\nimport Header from \"./Header\";\r\nimport ContactList from \"./ContactList\";\r\nimport AddContact from \"./AddContact\";\r\n\r\nfunction Index() {\r\n  // create a global store to store the state\r\n  const globalStore = useContext(Store);\r\n\r\n  // `todos` will be a state manager to manage state\r\n  const [state, dispatch] = useReducer(reducer, globalStore);\r\n\r\n  return (\r\n    <Store.Provider value={{ state, dispatch }}>\r\n      <Header />\r\n      <AddContact />\r\n      <ContactList />\r\n    </Store.Provider>\r\n  );\r\n}\r\n\r\nrender(<Index />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}